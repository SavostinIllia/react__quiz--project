{"ast":null,"code":"var _jsxFileName = \"/home/illia/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/React/GitReact/react__quiz--project/src/containers/Quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQiuz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [{\n        question: \"Do you love me ?\",\n        rightAnswerId: 1,\n        id: 1,\n        answers: [{\n          text: 'yes',\n          id: 1\n        }, {\n          text: 'no ',\n          id: 2\n        }, {\n          text: 'mb ',\n          id: 3\n        }]\n      }, {\n        question: \"Do I love you ?\",\n        rightAnswerId: 1,\n        id: 2,\n        answers: [{\n          text: 'yes',\n          id: 1\n        }, {\n          text: 'no ',\n          id: 2\n        }, {\n          text: 'mb ',\n          id: 3\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n\n      if (question.rightAnswerId === answerId) {\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          }\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          }\n        });\n      }\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Quiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Please answer all questions\"), this.state.isFinished ? /*#__PURE__*/React.createElement(FinishedQuiz, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 22\n      }\n    }) : /*#__PURE__*/React.createElement(ActiveQiuz, {\n      question: this.state.quiz[this.state.activeQuestion].question,\n      answers: this.state.quiz[this.state.activeQuestion].answers,\n      onAnswerClick: this.onAnswerClickHandler,\n      quizLength: this.state.quiz.length,\n      answerNumber: this.state.activeQuestion + 1,\n      state: this.state.answerState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/illia/Рабочий стол/React/GitReact/react__quiz--project/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQiuz","FinishedQuiz","Quiz","state","isFinished","activeQuestion","answerState","quiz","question","rightAnswerId","id","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","length","render","QuizWrapper"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQiuz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\n\nclass Quiz extends Component{\n\n    state = { \n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [\n            {\n                question: \"Do you love me ?\",\n                rightAnswerId : 1,\n                id: 1,\n                answers:[\n                    {text: 'yes', id:1 },\n                    {text: 'no ', id:2 },\n                    {text: 'mb ', id:3 },\n                ]\n            },\n            {\n                question: \"Do I love you ?\",\n                rightAnswerId : 1,\n                id: 2,\n                answers:[\n                    {text: 'yes', id:1 },\n                    {text: 'no ', id:2 },\n                    {text: 'mb ', id:3 },\n                ]\n            }\n        ]\n        \n    }\n\n    onAnswerClickHandler = answerId =>{\n        \n        if(this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n            if(this.state.answerState[key]=== 'success'){\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n\n        if( question.rightAnswerId === answerId) {\n\n            this.setState({\n                answerState: {[answerId] : 'success'}\n            })\n\n            const timeout = window.setTimeout(()=>{\n                if(this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                }else{\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }          \n\n                window.clearTimeout(timeout)\n            },1000)\n\n        }else {\n            this.setState({\n                answerState: {[answerId] : 'error'}\n            })\n        }\n       \n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n        \n    }\n\n    render() {\n        return(\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Please answer all questions</h1>\n                    {this.state.isFinished \n                    ?<FinishedQuiz\n                    \n                    \n                    />\n                    :<ActiveQiuz \n                        question={this.state.quiz[this.state.activeQuestion].question}\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\n                        onAnswerClick={this.onAnswerClickHandler}\n                        quizLength={this.state.quiz.length}\n                        answerNumber={this.state.activeQuestion + 1}\n                        state={this.state.answerState}\n                     />\n                    }\n     \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}